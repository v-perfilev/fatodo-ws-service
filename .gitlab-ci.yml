image: openjdk:17-jdk

variables:
  MAVEN_CLI_OPTS: -ntp --batch-mode -s etc/maven/settings.xml
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

cache:
  paths:
    - .m2/repository/
    - .sonar/cache/

stages:
  - compile
  - UT
  - IT
  - analyze
  - publish
  - deploy

compile:
  stage: compile
  script:
    - ./mvnw $MAVEN_CLI_OPTS compile $MAVEN_OPTS
  artifacts:
    paths:
      - target/

unit-tests:
  stage: UT
  dependencies:
    - compile
  script:
    - ./mvnw $MAVEN_CLI_OPTS test $MAVEN_OPTS
  artifacts:
    paths:
      - target/
  except:
    variables:
      - $DEPLOY_ONLY
      - $NEXUS_ONLY

integration-tests:
  stage: IT
  dependencies:
    - compile
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify $MAVEN_OPTS
      -DskipUTs
  artifacts:
    paths:
      - target/
  except:
    variables:
      - $DEPLOY_ONLY
      - $NEXUS_ONLY

contract-tests:
  stage: IT
  dependencies:
    - compile
  script:
    - ./mvnw $MAVEN_CLI_OPTS initialize test-compile failsafe:integration-test failsafe:verify $MAVEN_OPTS
      -Pcontracts
      -Dmaven.repo.url=$MAVEN_URL
      -Dmaven.repo.username=$MAVEN_USERNAME
      -Dmaven.repo.password=$MAVEN_PASSWORD
  artifacts:
    paths:
      - target/
  except:
    variables:
      - $DEPLOY_ONLY
      - $NEXUS_ONLY

sonar:
  stage: analyze
  dependencies:
    - unit-tests
    - integration-tests
  script:
    - ./mvnw $MAVEN_CLI_OPTS initialize sonar:sonar $MAVEN_OPTS
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
  artifacts:
    paths:
      - target/
  except:
    variables:
      - $DEPLOY_ONLY
      - $NEXUS_ONLY

checkstyle:
  stage: analyze
  script:
    - ./mvnw $MAVEN_CLI_OPTS checkstyle:check $MAVEN_OPTS
  except:
    variables:
      - $DEPLOY_ONLY
      - $NEXUS_ONLY

publish-to-docker:
  image: docker:20
  stage: publish
  services:
    - docker:20-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  only:
    - develop
    - master

publish-to-nexus:
  stage: publish
  dependencies:
    - compile
  script:
    - ./mvnw $MAVEN_CLI_OPTS deploy $MAVEN_OPTS
      -Dmaven.test.skip=true
      -Dmaven.repo.url=$MAVEN_URL
      -Dmaven.repo.username=$MAVEN_USERNAME
      -Dmaven.repo.password=$MAVEN_PASSWORD
  except:
    variables:
      - $DEPLOY_ONLY

deploy-to-stage:
  image: alpine:latest
  stage: deploy
  script:
    - chmod og= $SERVER_ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $SERVER_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $SERVER_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
    - ssh -i $SERVER_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $APP_NAME || true"
    - ssh -i $SERVER_ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d $DOCKER_APP_PARAMS $DOCKER_COMMON_PARAMS --name $APP_NAME $TAG_COMMIT"
  environment:
    name: staging
    url: $SERVER_URL
  only:
    - develop